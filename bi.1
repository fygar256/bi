.TH BI 1 "April 2025" "Version 2.6.0" "User Commands"
.SH NAME
bi \- vi-like binary editor
.SH SYNOPSIS
.B bi
[filename]
.SH DESCRIPTION
bi is a binary editor designed to resemble the UNIX editor 'vi'.
The name "bi" stands for "Binary editor like vI". It is intended for those who enjoy working with both vi and binary files.

The editor operates in two modes: edit mode and command-line mode.

.SH EDIT MODE COMMANDS
.TP
<hex-key>
Set binary data
.TP
h, j, k, l
Move cursor (also arrow keys)
.TP
Ctrl-F, Ctrl-B
Move by a page (256 bytes)
.TP
Ctrl-D, Ctrl-U
Move by half a page (128 bytes)
.TP
Ctrl-L
Repaint screen
.TP
^
Jump to beginning of line
.TP
$
Jump to end of line
.TP
m[a-z]
Mark current position
.TP
'[a-z]
Jump to a marked point
.TP
/<regexp>
Search using a regular expression
.TP
//xx xx xx ...
Search for binary pattern
.TP
n
Search next occurrence
.TP
N
Search previous occurrence
.TP
M
Display all marks
.TP
p
Paste yank buffer (overwrite)
.TP
P
Paste yank buffer (insert)
.TP
q
Quit
.TP
x
Delete one byte
.TP
Z
Write and quit
.TP
:
Enter command-line mode

.SH COMMAND LINE MODE
.TP
[offset]
Jump to address
.TP
[offset]S<string>
Insert string at offset
.TP
[offset]s<string>
Overwrite string at and after offset
.TP
[offset]R<filename>
Insert file at offset
.TP
[offset]r<filename>
Overwrite file contents at and after offset
.TP
[offset] f <len>,<data>
Fill with <data> of length <len>
.TP
[start,end] f <xx>
Fill specified range with <xx>
.TP
[offset]i<len>,<data>
Insert data at offset
.TP
[offset] d <len>
Delete <len> bytes from offset
.TP
y/str
Yank string into buffer
.TP
y//xx xx xx ...
Yank binary data into buffer
.TP
[start,end] d
Delete data in range
.TP
[start,end]y
Yank data in range
.TP
[start,end]|<data>
Bitwise OR with <data>
.TP
[start,end]&<data>
Bitwise AND with <data>
.TP
[start,end]^<data>
Bitwise XOR with <data>
.TP
[start,end]~
Bitwise NOT in range
.TP
[start,end] m <dest>
Move data to destination
.TP
[start,end] c <dest>
Copy data to destination (also yanks)
.TP
[start,end] i <dest>
Insert data at destination
.TP
[start,end] a /regexp/str
Replace string matching regexp with str
.TP
[start,end] a /regexp//xx xx xx ...
Replace regexp match with binary
.TP
[start,end] a //xx xx xx .../str
Replace binary with string
.TP
[start,end] a //xx xx xx ...//xx xx xx ...
Replace binary with binary
.TP
<start>,<end>w<filename>
Write specified range to file
.TP
!<string>
Execute shell command
.TP
q
Quit
.TP
q!
Force quit
.TP
wq, wq!
Write and quit
.TP
w <filename>
Write file
.TP
<Enter> or <ESC>
Return to edit mode

.SH NOTES
Arguments such as [offset] and [start,end] can be omitted to use the current position.
Positions can be specified as:
0 = start of file, . = current position, $ = end of file, [a-z] = marked position
Values can be given in hexadecimal or decimal (prefixed with '#').
In regular expressions, '/' can be escaped using '\\'.
The m command deletes data from <start> to <end> and moves it to <dest>.
If dest == filesize, the data is moved after EOF. If dest > filesize, the gap is filled with zeros.

.SH LIMITATIONS
Undo functionality is not yet implemented.

.SH VERSION
Version 2.6.0 (April 13, 2025)

.SH AUTHOR
T. Maekawa (fygar256)

.SH DISCLAIMER
The author accepts no responsibility for any outcome resulting from the use of this program.

.SH SEE ALSO
vi(1), xxd(1), hexdump(1)
