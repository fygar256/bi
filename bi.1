.TH BI 1 "April 14, 2025" "Version 2.8.5" "User Commands"
.SH NAME
bi \- vi-like binary editor
.SH SYNOPSIS
.B bi
[\-v] [\-s \fIscriptfile\fR] \fItargetfile\fR
.SH DESCRIPTION
\fBbi\fR is a binary editor designed to mimic the interface of the UNIX text editor \fIvi\fR. The name 'bi' stands for 'Binary editor like vI'. It provides both screen-based editing and command-line editing, including support for scripting.

.SH COMMANDS
.SS Edit Mode
.TP
\fB<hex-key>\fR
Set data at cursor.
.TP
\fBh j k l\fR or arrow keys
Move cursor left, down, up, or right.
.TP
\fB^F\fR, \fB^B\fR
Move forward/backward by one page (256 bytes).
.TP
\fB^D\fR, \fB^U\fR
Move forward/backward by half a page (128 bytes).
.TP
\fB^L\fR
Repaint the screen.
.TP
\fB^\fR, \fB$\fR
Jump to beginning/end of line.
.TP
\fBm\fI[a-z]\fR
Mark current position.
.TP
\fB'\fI[a-z]\fR
Jump to marked point.
.TP
\fBn\fR, \fBN\fR
Search next/previous match.
.TP
\fBM\fR
Display all marks.
.TP
\fBp\fR, \fBP\fR
Paste yank buffer (overwrite/insert).
.TP
\fBx\fR
Delete a byte.
.TP
\fBZ\fR
Write and quit.
.TP
\fB/\fR, \fB:\fR
Enter search or command-line mode.

.SS Command Line Mode
.TP
\fB;\fR
Comment. Ignored.
.TP
\fB/<regexp>\fR
Search regular expression.
.TP
\fB//xx xx...\fR
Search for binary data.
.TP
\fB!\fIstring\fR
Invoke shell command.
.TP
\fBq\fR, \fBq!\fR
Quit (force quit with !).
.TP
\fBwq\fR, \fBwq!\fR
Write and quit.
.TP
\fBw \fIfilename\fR\fR
Write to specified file.
.TP
\fBt \fIfilename\fR\fR
Run script silently.
.TP
\fBT \fIfilename\fR\fR
Run script verbosely.
.TP
\fB[offset]\fR
Jump to address.
.TP
\fB[offset]m[a-z]\fR
Mark address.
.TP
\fB[offset]S<string>\fR
Insert string at offset.
.TP
\fB[offset]s<string>\fR
Overwrite string at offset.
.TP
\fB[offset]o xx xx xx ...\fR
Store data and jump to end+1.
.TP
\fB[offset]O xx xx xx ...\fR
Insert data and jump to end+1.
.TP
\fB[offset]R<file>\fR, \fB[offset]r<file>\fR
Insert/overwrite file at offset.
.TP
\fB[offset]p\fR, \fB[offset]P\fR
Paste yank buffer (overwrite/insert).
.TP
\fB[offset]i<length>,<xx>\fR
Insert binary data repeatedly length times.
.TP
\fBy/str\fR, \fBy//xx xx...\fR
Yank string/data to buffer.
.TP
\fB[start,end]d\fR
Delete range.
.TP
\fB[start,end]f<xx>\fR
Fill range with byte.
.TP
\fB[start,end]y\fR
Yank range.
.TP
\fB[start,end]|<data>\fR
Bitwise OR.
.TP
\fB[start,end]&<data>\fR
Bitwise AND.
.TP
\fB[start,end]^<data>\fR
Bitwise XOR.
.TP
\fB[start,end]~\fR
Bitwise NOT.
.TP
\fB[start,end] < [[times],[01]]\fR
Left shift or rotate.
.TP
\fB[start,end] > [[times],[01]]\fR
Right shift or rotate.
.TP
\fB[start,end] << [[times],[01]]\fR
Multibyte left shift/rotate.
.TP
\fB[start,end] >> [[times],[01]]\fR
Multibyte right shift/rotate.
.TP
\fB[start,end]v<dest>\fR
Move data.
.TP
\fB[start,end]c<dest>\fR
Copy data.
.TP
\fB[start,end]i<dest>\fR
Insert data.
.TP
\fB[start,end]a/regexp/str\fR
Replace regexp with string.
.TP
\fB[start,end]a/regexp//xx xx...\fR
Replace regexp with binary data.
.TP
\fB[start,end]a//xx.../str\fR
Replace binary with string.
.TP
\fB[start,end]a//xx...//yy...\fR
Replace binary with binary.
.TP
\fB<start>,<end>w<filename>\fR
Write data range to file.
.TP
\fB<CR>\fR or \fB<ESC>\fR
Return to screen mode.

.SH EXPRESSIONS
Offsets and lengths can be given using simple expressions:
.TP
\fB<expression>\fR ::= \fB<factor> [+|-] <factor>\fR
.TP
\fB<factor>\fR
Decimal (\fB#\fInum\fR) or hexadecimal. Can include:
- '[a-z]: mark
- 0: top of file
- .: current position
- $: end of file

.SH REMARKS
- Regular expressions supported. Escape `/` with `\\`.
- Use `\;` to include a semicolon in commands.
- `[]` values may be omitted and default to current position.
- `%<length>` means `<end> = <start> + <length> - 1`.
- Some advanced commands marked with `@` are not yet implemented.

.SH SCRIPTING
If scripts are stored in `file.bi`. Usage:
.B bi [-v] -s file.bi targetfile

.SH LIMITATIONS
Undo is not supported yet.

.SH AUTHOR
Written by T. Maekawa (fygar256)

.SH DISCLAIMER
Use at your own risk. The author is not responsible for data loss or other issues.


