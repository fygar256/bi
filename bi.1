.TH BI 1 "May 1, 2025" "Version 3.4.3" "Binary Editor like vi"
.SH NAME
bi \- vi-like binary editor
.SH SYNOPSIS
.B bi
.RB [ \-v ]
.RB [ \-s\ file.bi ]
.IR targetfile
.SH DESCRIPTION
.B bi
is a binary editor designed to mimic the interface of the UNIX editor
.BR vi .
The name stands for "Binary editor like vi". It provides both on-screen editing and command line scripting for advanced binary manipulation.

.SH EDIT MODE COMMANDS
.TP
<hex-key>
Set data.
.TP
\fBh\fR \fBj\fR \fBk\fR \fBl\fR or arrow keys
Move cursor.
.TP
\fB^F\fR \fB^B\fR
Page forward/backward (256 bytes).
.TP
\fB^D\fR \fB^U\fR
Half-page forward/backward (128 bytes).
.TP
\fB^L\fR
Repaint screen.
.TP
\fB^\fR \fB$\fR
Jump to beginning/end of line.
.TP
\fBm[a-z]\fR
Mark current position.
.TP
\fB'[a-z]\fR
Jump to marked position.
.TP
\fBn\fR \fBN\fR
Search next/previous.
.TP
\fBM\fR
Display marks.
.TP
\fBp\fR \fBP\fR
Paste yank buffer (overwrite/insert).
.TP
\fBq\fR
Quit.
.TP
\fBx\fR
Delete byte.
.TP
\fBZ\fR
Write and quit.
.TP
\fB/\fR
Enter command-line search mode.
.TP
\fB:\fR
Enter command-line mode.

.SH COMMAND LINE MODE
.TP
\fB;\fR
Comment.
.TP
\fB/<regexp>\fR
Search with regular expression.
.TP
\fB//xx xx xx ...\fR
Search binary data.
.TP
\fB?<value>\fR
print value in decimal,hexadecimal,octal,binary,ASCII
.TP
\fB!string\fR
Invoke shell.
.TP
\fBq\fR \fBq!\fR \fBwq\fR \fBwq!\fR
Quit, force quit, write and quit.
.TP
\fBw <filename>\fR
Write file.
.TP
\fBt <filename>\fR \fBT <filename>\fR
Execute script silently/verbosely.
.TP
\fBn\fR \fBN\fR
Search next/previous.
.TP
\fB[offset]\fR
Jump to address.
.TP
\fB[offset]m[a-z]\fR
Mark position.
.TP
\fB[offset]O/string\fR \fB[offset]o/string\fR
Insert/overwrite string.
.TP
\fB[offset]O//xx xx...\fR \fB[offset]o//xx xx...\fR
Insert/overwrite binary.
.TP
\fB[offset]R<file>\fR \fB[offset]r<file>\fR
Read file (insert/overwrite) at offset.
.TP
\fB[offset]p\fR \fB[offset]P\fR
Paste yank buffer.
.TP
\fB[offset]i<length>,<xx>\fR \fB[offset]I<length>,<xx>\fR
Overwrite/insert repeated byte.
.TP
\fBy/str\fR \fBy//xx xx xx ...\fR
Yank to buffer.
.TP
\fB<start>,<end>d\fR
Delete and yank.
.TP
\fB<start>,<end>f xx xx xx ...\fR
Fill data.
.TP
\fB<start>,<end>c<dest>\fR
Copy data (also yanked).
.TP
\fB<start>,<end>C<dest>\fR
Insert data (also yanked).
.TP
\fB<start>,<end>s /regexp/str\fR
Replace regexp with string.
.TP
\fB<start>,<end>s /regexp//xx xx xx ...\fR
Replace regexp with binary.
.TP
\fB<start>,<end>s //xx xx.../str\fR
Replace binary with string.
.TP
\fB<start>,<end>s //xx...//yy...\fR
Replace binary with binary.
.TP
\fB[start],[end]y\fR
Yank data.
.TP
\fB[start,end]|<data>\fR \fB&<data>\fR \fB^<data>\fR \fB~\fR
Bitwise OR, AND, XOR, NOT.
.TP
\fB[start,end]<<[[times],[01]]\fR \fB>>[[times],[01]]\fR
Bitwise shift or rotate (multi-byte).
.TP
\fB[start,end]<[[times],[01]]\fR \fB>[[times],[01]]\fR
Bitwise shift or rotate (byte).
.TP
\fB[start,end]v<dest>\fR
Move data.
.TP
\fB<start>,<end>w<filename>\fR
Write data to file.
.TP
<CR>, <ESC>
Return to screen mode.

.SH ESCAPE CHARACTER
Escape character in command line is '\\'. use before ';' and '/'.
.SH v COMMAND
The v command has a bit of a quirk. It deletes data from <start> to <end>
and moves it to <dest>, but if dest==filesize, the deleted data is moved
to the end of the data + 1, and if dest>filesize, it fills from the end of
the file + 1 to dest with 0s, and writes the deleted data from dest.

.SH EXPRESSIONS
Expressions support:
.TP
\fB<expression> := <factor> | <factor> [+|-] <factor>\fR
Where <factor> is:
- Hex (e.g., \fB1F\fR)  
- Decimal prefixed with \fB#\fR (e.g., \fB#16\fR)  
- Marks (\fB[a-z]\fR), top (0), current (.), end ($)
- python eval() expression can be passed enclosed with '{}'
- In {},'mem[x]' represents editing file address x,'cp' represents current position.

.SH PERCENT-LENGTH
\fB%<length>\fR can be used to define end offset:
.RS
\fB<end> = <start> + <length> - 1\fR
.RE

.SH SCRIPTING
Scripting is supported via files named \fIfile.bi\fR.
.TP
\fBbi [-v] -s file.bi targetfile\fR
Executes commands from \fIfile.bi\fR on \fItargetfile\fR.

.SH HISTORY
.nf
1991-12-04  Started after floppy disk error.
1992-01-23  Named 'bi'.
1992-02-10  Added page motion and bug fixes.

Linux version:
2025-03-29  v1.98
2025-04-03  v2.0 complete
2025-04-14  v2.7.3 scripting support
2025-04-15  v2.9.7 shift/rotate support
2025-04-20  v3.0.4 write permission check
.fi

.SH BUGS
No undo functionality.

.SH AUTHOR
Written by T.Maekawa (fygar256)

.SH DISCLAIMER
I won't owe any responsibility for the result of application of this program.

