.TH BI 1 "April 2025" "Version 2.7.0" "User Commands"
.SH NAME
bi \- a vi-like binary editor
.SH SYNOPSIS
.B bi
[\-v] [\-s script.bi] filename
.SH DESCRIPTION
.B bi
is a binary editor designed to emulate the interface and behavior of the classic UNIX text editor
.BR vi .
The name "bi" stands for Binary editor like vI. It offers vi-style navigation and editing for binary files,
making it ideal for users familiar with vi.

bi operates in two primary modes: edit mode and command-line mode.
.SH EDIT MODE COMMANDS
.TP
<hex-key>
Set binary data at current cursor position.
.TP
hjkl, arrow keys
Move cursor left, down, up, right.
.TP
^F, ^B
Move forward/backward by 256 bytes.
.TP
^D, ^U
Move down/up by 128 bytes.
.TP
^L
Repaint the screen.
.TP
^
Jump to the start of the current line.
.TP
$
Jump to the end of the current line.
.TP
m[a-z]
Mark current position with label a-z.
.TP
'[a-z]
Jump to a previously marked position.
.TP
n
Search forward.
.TP
N
Search backward.
.TP
M
Display all mark positions.
.TP
p
Paste yank buffer (overwrite).
.TP
P
Paste yank buffer (insert).
.TP
x
Delete current byte.
.TP
Z
Write changes and quit.
.TP
q
Quit editing session.
.TP
/
Enter search command mode.
.TP
:
Enter command-line mode.
.SH COMMAND LINE MODE
.TP
;
Comment (ignored after ';').
.TP
/<regexp>
Search for a regular expression.
.TP
//xx xx ...
Search for binary data.
.TP
!<command>
Execute shell command.
.TP
q
Quit.
.TP
q!
Force quit without saving.
.TP
wq, wq!
Write and quit.
.TP
w <filename>
Write to specified file.
.TP
[offset]
Jump to address.
.TP
[offset]m[a-z]
Mark address with label.
.TP
[offset]S<string>
Insert string at offset.
.TP
[offset]s<string>
Overwrite string at offset.
.TP
[offset]R<filename>
Insert contents of file at offset.
.TP
[offset]r<filename>
Overwrite with file contents at offset.
.TP
[offset]p
Paste yank buffer (overwrite).
.TP
[offset]P
Paste yank buffer (insert).
.TP
[offset]f<len>,<data>
Fill len bytes with data from offset.
.TP
[start,end]f<xx>
Fill range with value xx.
.TP
[offset]i<len>,<data>
Insert binary data.
.TP
[offset]d<len>
Delete length of bytes.
.TP
y/str
Yank string to buffer.
.TP
y//xx xx ...
Yank binary data to buffer.
.TP
[start,end]d
Delete range.
.TP
[start,end]y
Yank range to buffer.
.TP
[start,end]|<data>
Bitwise OR with data.
.TP
[start,end]&<data>
Bitwise AND with data.
.TP
[start,end]^<data>
Bitwise XOR with data.
.TP
[start,end]~
Bitwise NOT of data.
.TP
[start,end]v<dest>
Move data to destination.
.TP
[start,end]c<dest>
Copy data to destination.
.TP
[start,end]i<dest>
Insert data at destination.
.TP
[start,end]a/regexp/str
Replace regex with string.
.TP
[start,end]a/regexp//xx xx ...
Replace regex with binary data.
.TP
[start,end]a//xx xx .../str
Replace data with string.
.TP
[start,end]a//xx xx ...//xx xx ...
Replace binary with binary.
.TP
<start>,<end>w<filename>
Write range to file.
.SH NOTES
Regular expressions can be used with '/' and must escape '/' with '\'. Hexadecimal and decimal (prefixed by '#') values are allowed.
Positions can be denoted as 0 (start), . (current), $ (end), and [a-z] for marks.
.SH SCRIPTING
bi supports scripting via a file named
.B file.bi .
Run with:
.B bi -s file.bi targetfile
.SH VERSION HISTORY
Development began in 1991. Notable recent versions include:
- v2.5.5: Command 'y' added
- v2.6.0: Bitwise operations &, ^, |, ~
- v2.7.0: Scripting support
.SH BUGS
Undo functionality is not yet implemented.
.SH AUTHOR
T. Maekawa (fygar256)
.SH DISCLAIMER
No responsibility is taken for the use of this program.
